// Code generated by "stringer -type=ByFilter"; DO NOT EDIT.

package recurrence

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BYSETPOS-1]
	_ = x[BYWEEKNO-2]
	_ = x[BYYEARDAY-4]
	_ = x[BYMONTHDAY-8]
	_ = x[BYHOUR-16]
	_ = x[BYMONTH-32]
	_ = x[BYDAY-64]
	_ = x[BYMINUTE-128]
}

const (
	_ByFilter_name_0 = "BYSETPOSBYWEEKNO"
	_ByFilter_name_1 = "BYYEARDAY"
	_ByFilter_name_2 = "BYMONTHDAY"
	_ByFilter_name_3 = "BYHOUR"
	_ByFilter_name_4 = "BYMONTH"
	_ByFilter_name_5 = "BYDAY"
	_ByFilter_name_6 = "BYMINUTE"
)

var (
	_ByFilter_index_0 = [...]uint8{0, 8, 16}
)

func (i ByFilter) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ByFilter_name_0[_ByFilter_index_0[i]:_ByFilter_index_0[i+1]]
	case i == 4:
		return _ByFilter_name_1
	case i == 8:
		return _ByFilter_name_2
	case i == 16:
		return _ByFilter_name_3
	case i == 32:
		return _ByFilter_name_4
	case i == 64:
		return _ByFilter_name_5
	case i == 128:
		return _ByFilter_name_6
	default:
		return "ByFilter(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
